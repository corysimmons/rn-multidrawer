"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[881],{1622:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"guides/layouts","title":"Layouts Guide","description":"The layout system in React Native MultiDrawer determines how drawers are positioned and sized relative to each other. This guide covers all available layout options and their use cases.","source":"@site/docs/guides/layouts.md","sourceDirName":"guides","slug":"/guides/layouts","permalink":"/rn-multidrawer/guides/layouts","draft":false,"unlisted":false,"editUrl":"https://github.com/fisher/rn-multidrawer/tree/main/docs/docs/guides/layouts.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"Advanced Usage","permalink":"/rn-multidrawer/guides/advanced-usage"},"next":{"title":"Animations","permalink":"/rn-multidrawer/guides/animations"}}');var s=r(4848),l=r(8453);const t={sidebar_position:3},a="Layouts Guide",o={},d=[{value:"Overview",id:"overview",level:2},{value:"Available Layouts",id:"available-layouts",level:2},{value:"<code>fullscreen</code> (Default)",id:"fullscreen-default",level:3},{value:"<code>sidebar-layout</code>",id:"sidebar-layout",level:3},{value:"<code>header-footer-layout</code>",id:"header-footer-layout",level:3},{value:"<code>corner-aware</code>",id:"corner-aware",level:3},{value:"Layout Comparison",id:"layout-comparison",level:2},{value:"Visual Examples",id:"visual-examples",level:2},{value:"Fullscreen Layout",id:"fullscreen-layout",level:3},{value:"Sidebar Layout",id:"sidebar-layout-1",level:3},{value:"Header-Footer Layout",id:"header-footer-layout-1",level:3},{value:"Dynamic Layout Changes",id:"dynamic-layout-changes",level:2},{value:"Layout-Specific Considerations",id:"layout-specific-considerations",level:2},{value:"Performance",id:"performance",level:3},{value:"Responsiveness",id:"responsiveness",level:3},{value:"Content Considerations",id:"content-considerations",level:3},{value:"Fullscreen Layout",id:"fullscreen-layout-1",level:4},{value:"Sidebar Layout",id:"sidebar-layout-2",level:4},{value:"Header-Footer Layout",id:"header-footer-layout-2",level:4},{value:"Corner-Aware Layout",id:"corner-aware-layout",level:4},{value:"Best Practices",id:"best-practices",level:2},{value:"Layout Selection",id:"layout-selection",level:3},{value:"Content Design",id:"content-design",level:3},{value:"Animation Considerations",id:"animation-considerations",level:3},{value:"Troubleshooting",id:"troubleshooting",level:2},{value:"Layout Not Applying",id:"layout-not-applying",level:3},{value:"Unexpected Sizes",id:"unexpected-sizes",level:3},{value:"Performance Issues",id:"performance-issues",level:3},{value:"Migration Guide",id:"migration-guide",level:2},{value:"From Fullscreen to Other Layouts",id:"from-fullscreen-to-other-layouts",level:3},{value:"Layout-Specific Migrations",id:"layout-specific-migrations",level:3},{value:"See Also",id:"see-also",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"layouts-guide",children:"Layouts Guide"})}),"\n",(0,s.jsx)(n.p,{children:"The layout system in React Native MultiDrawer determines how drawers are positioned and sized relative to each other. This guide covers all available layout options and their use cases."}),"\n",(0,s.jsx)(n.h2,{id:"overview",children:"Overview"}),"\n",(0,s.jsxs)(n.p,{children:["The layout is configured via the ",(0,s.jsx)(n.code,{children:"options.layout"})," prop on ",(0,s.jsx)(n.code,{children:"DrawerProvider"}),":"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<DrawerProvider options={{ layout: 'fullscreen' }}>\n  {/* Your drawers */}\n</DrawerProvider>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"available-layouts",children:"Available Layouts"}),"\n",(0,s.jsxs)(n.h3,{id:"fullscreen-default",children:[(0,s.jsx)(n.code,{children:"fullscreen"})," (Default)"]}),"\n",(0,s.jsx)(n.p,{children:"All drawers cover the full screen dimensions. This is the most common layout."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<DrawerProvider options={{ layout: 'fullscreen' }}>\n  {/* All drawers are full screen size */}\n</DrawerProvider>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Characteristics:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Left/Right drawers: Full screen height"}),"\n",(0,s.jsx)(n.li,{children:"Top/Bottom drawers: Full screen width"}),"\n",(0,s.jsx)(n.li,{children:"All drawers start from screen edges"}),"\n",(0,s.jsx)(n.li,{children:"Drawers can overlap when multiple are open"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Best for:"})," Traditional mobile app layouts, overlays"]}),"\n",(0,s.jsx)(n.h3,{id:"sidebar-layout",children:(0,s.jsx)(n.code,{children:"sidebar-layout"})}),"\n",(0,s.jsx)(n.p,{children:"Left and right drawers are full height, while top and bottom drawers fit the remaining width."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<DrawerProvider options={{ layout: 'sidebar-layout' }}>\n  {/* Left/Right: full height, Top/Bottom: remaining width */}\n</DrawerProvider>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Characteristics:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Left/Right drawers: Full screen height"}),"\n",(0,s.jsx)(n.li,{children:"Top/Bottom drawers: Width minus sidebar space"}),"\n",(0,s.jsx)(n.li,{children:"Creates a traditional desktop-like sidebar layout"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Best for:"})," Desktop-style applications, admin panels"]}),"\n",(0,s.jsx)(n.h3,{id:"header-footer-layout",children:(0,s.jsx)(n.code,{children:"header-footer-layout"})}),"\n",(0,s.jsx)(n.p,{children:"Top and bottom drawers are full width, while left and right drawers fit the remaining height."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<DrawerProvider options={{ layout: 'header-footer-layout' }}>\n  {/* Top/Bottom: full width, Left/Right: remaining height */}\n</DrawerProvider>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Characteristics:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Top/Bottom drawers: Full screen width"}),"\n",(0,s.jsx)(n.li,{children:"Left/Right drawers: Height minus header/footer space"}),"\n",(0,s.jsx)(n.li,{children:"Creates a traditional web layout with header and footer"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Best for:"})," Web-style applications, content management systems"]}),"\n",(0,s.jsx)(n.h3,{id:"corner-aware",children:(0,s.jsx)(n.code,{children:"corner-aware"})}),"\n",(0,s.jsx)(n.p,{children:"All drawers respect each other's corners and dimensions."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"<DrawerProvider options={{ layout: 'corner-aware' }}>\n  {/* All drawers respect corner boundaries */}\n</DrawerProvider>\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Characteristics:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Drawers don't overlap at corners"}),"\n",(0,s.jsx)(n.li,{children:"Complex calculations for optimal space usage"}),"\n",(0,s.jsx)(n.li,{children:"Most sophisticated layout option"}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Best for:"})," Complex interfaces, dashboard applications"]}),"\n",(0,s.jsx)(n.h2,{id:"layout-comparison",children:"Layout Comparison"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Layout"}),(0,s.jsx)(n.th,{children:"Left/Right Size"}),(0,s.jsx)(n.th,{children:"Top/Bottom Size"}),(0,s.jsx)(n.th,{children:"Overlap"}),(0,s.jsx)(n.th,{children:"Use Case"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"fullscreen"})}),(0,s.jsx)(n.td,{children:"Full height"}),(0,s.jsx)(n.td,{children:"Full width"}),(0,s.jsx)(n.td,{children:"Yes"}),(0,s.jsx)(n.td,{children:"Mobile apps"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sidebar-layout"})}),(0,s.jsx)(n.td,{children:"Full height"}),(0,s.jsx)(n.td,{children:"Remaining width"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Desktop apps"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"header-footer-layout"})}),(0,s.jsx)(n.td,{children:"Remaining height"}),(0,s.jsx)(n.td,{children:"Full width"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Web apps"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"corner-aware"})}),(0,s.jsx)(n.td,{children:"Calculated"}),(0,s.jsx)(n.td,{children:"Calculated"}),(0,s.jsx)(n.td,{children:"No"}),(0,s.jsx)(n.td,{children:"Dashboards"})]})]})]}),"\n",(0,s.jsx)(n.h2,{id:"visual-examples",children:"Visual Examples"}),"\n",(0,s.jsx)(n.h3,{id:"fullscreen-layout",children:"Fullscreen Layout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2190     \u2193      \u2192     \u2502 \u2190 All drawers full size\n\u2502                     \u2502\n\u2502    Main Content     \u2502\n\u2502                     \u2502\n\u2502         \u2191           \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"sidebar-layout-1",children:"Sidebar Layout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2510\n\u2502 \u2190 \u2502      \u2193      \u2502 \u2192 \u2502 \u2190 Left/Right full height\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524   Top/Bottom fit width\n\u2502   \u2502             \u2502   \u2502\n\u2502   \u2502Main Content \u2502   \u2502\n\u2502   \u2502             \u2502   \u2502\n\u251c\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u253c\u2500\u2500\u2500\u2524\n\u2502 \u2190 \u2502      \u2191      \u2502 \u2192 \u2502\n\u2514\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h3,{id:"header-footer-layout-1",children:"Header-Footer Layout"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 \u2190     \u2193      \u2192     \u2502 \u2190 Top/Bottom full width\n\u251c\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2524\n\u2502 \u2190 \u2502             \u2502 \u2192 \u2502 \u2190 Left/Right fit height\n\u2502   \u2502Main Content \u2502   \u2502\n\u2502 \u2190 \u2502             \u2502 \u2192 \u2502\n\u251c\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2534\u2500\u2500\u2500\u2524\n\u2502 \u2190     \u2191      \u2192     \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n"})}),"\n",(0,s.jsx)(n.h2,{id:"dynamic-layout-changes",children:"Dynamic Layout Changes"}),"\n",(0,s.jsx)(n.p,{children:"You can change layouts dynamically, but it requires recreating the DrawerProvider:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import React, { useState } from 'react';\n\nfunction App() {\n  const [layout, setLayout] = useState('fullscreen');\n  \n  return (\n    <DrawerProvider \n      key={layout} // Force re-render on layout change\n      options={{ layout }}\n    >\n      <LayoutSelector onLayoutChange={setLayout} />\n      {/* Your drawers */}\n    </DrawerProvider>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h2,{id:"layout-specific-considerations",children:"Layout-Specific Considerations"}),"\n",(0,s.jsx)(n.h3,{id:"performance",children:"Performance"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fullscreen"}),": Fastest, simplest calculations"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"sidebar-layout"}),": Moderate, simple width adjustments"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"header-footer-layout"}),": Moderate, simple height adjustments"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"corner-aware"}),": Slowest, complex calculations"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"responsiveness",children:"Responsiveness"}),"\n",(0,s.jsx)(n.p,{children:"Different layouts work better on different screen sizes:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import { Dimensions } from 'react-native';\n\nfunction getOptimalLayout() {\n  const { width, height } = Dimensions.get('window');\n  const isTablet = width > 768;\n  const isLandscape = width > height;\n  \n  if (isTablet && isLandscape) {\n    return 'sidebar-layout';\n  } else if (isTablet) {\n    return 'header-footer-layout';\n  }\n  return 'fullscreen';\n}\n\nexport default function App() {\n  const [layout] = useState(getOptimalLayout());\n  \n  return (\n    <DrawerProvider options={{ layout }}>\n      {/* Drawers */}\n    </DrawerProvider>\n  );\n}\n"})}),"\n",(0,s.jsx)(n.h3,{id:"content-considerations",children:"Content Considerations"}),"\n",(0,s.jsx)(n.h4,{id:"fullscreen-layout-1",children:"Fullscreen Layout"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Drawers can be any size"}),"\n",(0,s.jsx)(n.li,{children:"Content should handle overlays gracefully"}),"\n",(0,s.jsx)(n.li,{children:"Good for immersive experiences"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"sidebar-layout-2",children:"Sidebar Layout"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Top/bottom drawers have limited width"}),"\n",(0,s.jsx)(n.li,{children:"Perfect for navigation + header/footer"}),"\n",(0,s.jsx)(n.li,{children:"Content area is consistent"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"header-footer-layout-2",children:"Header-Footer Layout"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Left/right drawers have limited height"}),"\n",(0,s.jsx)(n.li,{children:"Great for persistent headers/footers"}),"\n",(0,s.jsx)(n.li,{children:"Content flows vertically"}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"corner-aware-layout",children:"Corner-Aware Layout"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Most complex but most space-efficient"}),"\n",(0,s.jsx)(n.li,{children:"Good for dense interfaces"}),"\n",(0,s.jsx)(n.li,{children:"Requires careful content planning"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,s.jsx)(n.h3,{id:"layout-selection",children:"Layout Selection"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Mobile-first"}),": Start with ",(0,s.jsx)(n.code,{children:"fullscreen"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Desktop apps"}),": Use ",(0,s.jsx)(n.code,{children:"sidebar-layout"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Web apps"}),": Use ",(0,s.jsx)(n.code,{children:"header-footer-layout"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Dashboards"}),": Consider ",(0,s.jsx)(n.code,{children:"corner-aware"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"content-design",children:"Content Design"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test all orientations"})," with your chosen layout"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Consider drawer priorities"})," - which should dominate space"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Plan for small screens"})," - ensure critical content remains accessible"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Use responsive breakpoints"})," to switch layouts"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"animation-considerations",children:"Animation Considerations"}),"\n",(0,s.jsx)(n.p,{children:"Different layouts may require different animation timings:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Adjust animation speed based on layout\nconst getAnimationSpeed = (layout: DrawerLayout) => {\n  switch (layout) {\n    case 'fullscreen': return 0.8;\n    case 'sidebar-layout': return 1.0; // Faster for smaller drawers\n    case 'header-footer-layout': return 1.0;\n    case 'corner-aware': return 0.6; // Slower for complex layouts\n  }\n};\n\n<Drawer \n  side=\"left\" \n  animationSpeed={getAnimationSpeed(layout)}\n>\n  {/* Drawer content */}\n</Drawer>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"troubleshooting",children:"Troubleshooting"}),"\n",(0,s.jsx)(n.h3,{id:"layout-not-applying",children:"Layout Not Applying"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Ensure ",(0,s.jsx)(n.code,{children:"DrawerProvider"})," is recreated when layout changes"]}),"\n",(0,s.jsx)(n.li,{children:"Check that all drawers are inside the provider"}),"\n",(0,s.jsx)(n.li,{children:"Verify layout string matches exactly"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"unexpected-sizes",children:"Unexpected Sizes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Remember that layouts affect ALL drawers"}),"\n",(0,s.jsx)(n.li,{children:"Check screen dimensions on different devices"}),"\n",(0,s.jsx)(n.li,{children:"Consider safe area insets"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"performance-issues",children:"Performance Issues"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"corner-aware"})," layout is most expensive"]}),"\n",(0,s.jsx)(n.li,{children:"Consider simpler layouts for lower-end devices"}),"\n",(0,s.jsx)(n.li,{children:"Profile drawer opening animations"}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"migration-guide",children:"Migration Guide"}),"\n",(0,s.jsx)(n.h3,{id:"from-fullscreen-to-other-layouts",children:"From Fullscreen to Other Layouts"}),"\n",(0,s.jsx)(n.p,{children:"When migrating from fullscreen to constrained layouts:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Test drawer content"})," at smaller sizes"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Adjust drawer widths/heights"})," if hardcoded"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Update animations"})," that depend on full screen size"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Review gesture detection"})," areas"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"layout-specific-migrations",children:"Layout-Specific Migrations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"// Before: Fullscreen with fixed drawer width\n<View style={{ width: 300 }}>\n\n// After: Sidebar layout - let system control width\n<View style={{ flex: 1, maxWidth: 300 }}>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"see-also",children:"See Also"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../examples/multi-drawer",children:"Multi-Drawer Example"})," - Layout examples in practice"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"../api/drawer-provider",children:"DrawerProvider API"})," - Layout configuration options"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"./advanced-usage",children:"Advanced Usage"})," - Performance optimization for layouts"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>a});var i=r(6540);const s={},l=i.createContext(s);function t(e){const n=i.useContext(l);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);