"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[555],{6662:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"examples/simple-drawer","title":"Simple Drawer","description":"This example shows how to create a basic left-side navigation drawer with menu items.","source":"@site/docs/examples/simple-drawer.md","sourceDirName":"examples","slug":"/examples/simple-drawer","permalink":"/rn-multidrawer/examples/simple-drawer","draft":false,"unlisted":false,"editUrl":"https://github.com/fisher/rn-multidrawer/tree/main/docs/docs/examples/simple-drawer.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Troubleshooting","permalink":"/rn-multidrawer/guides/troubleshooting"},"next":{"title":"Multi-Drawer Example","permalink":"/rn-multidrawer/examples/multi-drawer"}}');var o=t(4848),r=t(8453);const s={sidebar_position:1},a="Simple Drawer",l={},d=[{value:"Preview",id:"preview",level:2},{value:"Complete Code",id:"complete-code",level:2},{value:"Key Features",id:"key-features",level:2},{value:"1. User Profile Header",id:"1-user-profile-header",level:3},{value:"2. Navigation Menu",id:"2-navigation-menu",level:3},{value:"3. Gesture Detection",id:"3-gesture-detection",level:3},{value:"4. Auto-Close on Selection",id:"4-auto-close-on-selection",level:3},{value:"5. Responsive Design",id:"5-responsive-design",level:3},{value:"Customization Options",id:"customization-options",level:2},{value:"Change Drawer Width",id:"change-drawer-width",level:3},{value:"Add Icons",id:"add-icons",level:3},{value:"Custom Colors",id:"custom-colors",level:3},{value:"Add Animations",id:"add-animations",level:3},{value:"Integration with Navigation",id:"integration-with-navigation",level:2},{value:"React Navigation",id:"react-navigation",level:3},{value:"Expo Router",id:"expo-router",level:3},{value:"Accessibility",id:"accessibility",level:2},{value:"Performance Tips",id:"performance-tips",level:2},{value:"Next Steps",id:"next-steps",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"simple-drawer",children:"Simple Drawer"})}),"\n",(0,o.jsx)(n.p,{children:"This example shows how to create a basic left-side navigation drawer with menu items."}),"\n",(0,o.jsx)(n.h2,{id:"preview",children:"Preview"}),"\n",(0,o.jsx)(n.p,{children:"A simple menu drawer that slides in from the left with navigation options and user profile information."}),"\n",(0,o.jsx)(n.h2,{id:"complete-code",children:"Complete Code"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import React from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  SafeAreaView,\n  StatusBar,\n} from 'react-native';\nimport { DrawerProvider, Drawer } from 'react-native-multidrawer';\n\n// Main app component\nexport default function App() {\n  return (\n    <DrawerProvider>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f8f9fa\" />\n      \n      {/* Left navigation drawer */}\n      <Drawer side=\"left\" hitboxSize={25}>\n        {({ close }) => <NavigationDrawer onClose={close} />}\n      </Drawer>\n      \n      {/* Main app content */}\n      <MainContent />\n    </DrawerProvider>\n  );\n}\n\n// Navigation drawer component\nfunction NavigationDrawer({ onClose }: { onClose: () => void }) {\n  const menuItems = [\n    { id: 1, title: 'Home', icon: '\ud83c\udfe0' },\n    { id: 2, title: 'Profile', icon: '\ud83d\udc64' },\n    { id: 3, title: 'Settings', icon: '\u2699\ufe0f' },\n    { id: 4, title: 'Help', icon: '\u2753' },\n    { id: 5, title: 'About', icon: '\u2139\ufe0f' },\n  ];\n\n  const handleMenuPress = (item: any) => {\n    console.log(`Navigating to ${item.title}`);\n    // Add your navigation logic here\n    // navigation.navigate(item.title);\n    onClose();\n  };\n\n  return (\n    <SafeAreaView style={styles.drawer}>\n      {/* Header */}\n      <View style={styles.drawerHeader}>\n        <View style={styles.avatar}>\n          <Text style={styles.avatarText}>JD</Text>\n        </View>\n        <Text style={styles.userName}>John Doe</Text>\n        <Text style={styles.userEmail}>john.doe@example.com</Text>\n      </View>\n\n      {/* Menu Items */}\n      <View style={styles.menuContainer}>\n        {menuItems.map((item) => (\n          <TouchableOpacity\n            key={item.id}\n            style={styles.menuItem}\n            onPress={() => handleMenuPress(item)}\n            activeOpacity={0.7}\n          >\n            <Text style={styles.menuIcon}>{item.icon}</Text>\n            <Text style={styles.menuTitle}>{item.title}</Text>\n          </TouchableOpacity>\n        ))}\n      </View>\n\n      {/* Footer */}\n      <View style={styles.drawerFooter}>\n        <TouchableOpacity style={styles.logoutButton} onPress={onClose}>\n          <Text style={styles.logoutText}>Sign Out</Text>\n        </TouchableOpacity>\n      </View>\n    </SafeAreaView>\n  );\n}\n\n// Main content component\nfunction MainContent() {\n  return (\n    <SafeAreaView style={styles.main}>\n      <View style={styles.content}>\n        <Text style={styles.title}>Welcome to MyApp</Text>\n        <Text style={styles.subtitle}>Swipe from the left edge to open menu</Text>\n        \n        <View style={styles.card}>\n          <Text style={styles.cardTitle}>Getting Started</Text>\n          <Text style={styles.cardText}>\n            This is a simple drawer example. Try swiping from the left edge \n            of the screen to open the navigation menu.\n          </Text>\n        </View>\n      </View>\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  // Drawer styles\n  drawer: {\n    flex: 1,\n    backgroundColor: '#2c3e50',\n  },\n  drawerHeader: {\n    padding: 20,\n    paddingTop: 40,\n    borderBottomWidth: 1,\n    borderBottomColor: '#34495e',\n    alignItems: 'center',\n  },\n  avatar: {\n    width: 80,\n    height: 80,\n    borderRadius: 40,\n    backgroundColor: '#3498db',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  avatarText: {\n    color: 'white',\n    fontSize: 24,\n    fontWeight: 'bold',\n  },\n  userName: {\n    color: 'white',\n    fontSize: 18,\n    fontWeight: '600',\n    marginBottom: 4,\n  },\n  userEmail: {\n    color: '#bdc3c7',\n    fontSize: 14,\n  },\n  \n  // Menu styles\n  menuContainer: {\n    flex: 1,\n    paddingTop: 20,\n  },\n  menuItem: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 15,\n    borderBottomWidth: StyleSheet.hairlineWidth,\n    borderBottomColor: '#34495e',\n  },\n  menuIcon: {\n    fontSize: 20,\n    marginRight: 15,\n    width: 25,\n    textAlign: 'center',\n  },\n  menuTitle: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '500',\n  },\n  \n  // Footer styles\n  drawerFooter: {\n    padding: 20,\n    borderTopWidth: 1,\n    borderTopColor: '#34495e',\n  },\n  logoutButton: {\n    backgroundColor: '#e74c3c',\n    paddingVertical: 12,\n    paddingHorizontal: 20,\n    borderRadius: 6,\n    alignItems: 'center',\n  },\n  logoutText: {\n    color: 'white',\n    fontSize: 16,\n    fontWeight: '600',\n  },\n  \n  // Main content styles\n  main: {\n    flex: 1,\n    backgroundColor: '#f8f9fa',\n  },\n  content: {\n    flex: 1,\n    padding: 20,\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#2c3e50',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#7f8c8d',\n    marginBottom: 30,\n  },\n  card: {\n    backgroundColor: 'white',\n    borderRadius: 8,\n    padding: 20,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.1,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  cardTitle: {\n    fontSize: 18,\n    fontWeight: '600',\n    color: '#2c3e50',\n    marginBottom: 10,\n  },\n  cardText: {\n    fontSize: 14,\n    color: '#7f8c8d',\n    lineHeight: 20,\n  },\n});\n"})}),"\n",(0,o.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,o.jsx)(n.h3,{id:"1-user-profile-header",children:"1. User Profile Header"}),"\n",(0,o.jsx)(n.p,{children:"The drawer includes a user profile section with avatar, name, and email."}),"\n",(0,o.jsx)(n.h3,{id:"2-navigation-menu",children:"2. Navigation Menu"}),"\n",(0,o.jsx)(n.p,{children:"Clean menu items with icons and proper touch feedback."}),"\n",(0,o.jsx)(n.h3,{id:"3-gesture-detection",children:"3. Gesture Detection"}),"\n",(0,o.jsxs)(n.p,{children:["Increased ",(0,o.jsx)(n.code,{children:"hitboxSize"})," to 25px for easier edge detection."]}),"\n",(0,o.jsx)(n.h3,{id:"4-auto-close-on-selection",children:"4. Auto-Close on Selection"}),"\n",(0,o.jsx)(n.p,{children:"Menu items automatically close the drawer after selection."}),"\n",(0,o.jsx)(n.h3,{id:"5-responsive-design",children:"5. Responsive Design"}),"\n",(0,o.jsx)(n.p,{children:"Uses SafeAreaView and proper spacing for different screen sizes."}),"\n",(0,o.jsx)(n.h2,{id:"customization-options",children:"Customization Options"}),"\n",(0,o.jsx)(n.h3,{id:"change-drawer-width",children:"Change Drawer Width"}),"\n",(0,o.jsx)(n.p,{children:"Drawers automatically size based on screen dimensions and layout, but you can customize the content width:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"<View style={[styles.drawer, { width: 280 }]}>\n  {/* Custom width drawer content */}\n</View>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"add-icons",children:"Add Icons"}),"\n",(0,o.jsx)(n.p,{children:"Replace emoji icons with icon libraries:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'import { Ionicons } from \'@expo/vector-icons\';\n\n// In menu items:\n<Ionicons name="home-outline" size={20} color="white" />\n'})}),"\n",(0,o.jsx)(n.h3,{id:"custom-colors",children:"Custom Colors"}),"\n",(0,o.jsx)(n.p,{children:"Modify the color scheme:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"const colors = {\n  primary: '#3498db',\n  secondary: '#2c3e50',\n  accent: '#e74c3c',\n  text: '#ffffff',\n  textSecondary: '#bdc3c7',\n};\n"})}),"\n",(0,o.jsx)(n.h3,{id:"add-animations",children:"Add Animations"}),"\n",(0,o.jsx)(n.p,{children:"Enhanced animations using render props:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<Drawer side="left">\n  {({ progress, close }) => (\n    <Animated.View \n      style={[\n        styles.drawer,\n        {\n          transform: [{ translateX: (progress - 1) * 50 }],\n          opacity: progress * 0.95 + 0.05,\n        }\n      ]}\n    >\n      <NavigationDrawer onClose={close} />\n    </Animated.View>\n  )}\n</Drawer>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"integration-with-navigation",children:"Integration with Navigation"}),"\n",(0,o.jsx)(n.h3,{id:"react-navigation",children:"React Navigation"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { useNavigation } from '@react-navigation/native';\n\nfunction NavigationDrawer({ onClose }) {\n  const navigation = useNavigation();\n  \n  const handleMenuPress = (screen: string) => {\n    navigation.navigate(screen);\n    onClose();\n  };\n  \n  // ... rest of component\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"expo-router",children:"Expo Router"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:"import { router } from 'expo-router';\n\nconst handleMenuPress = (route: string) => {\n  router.push(route);\n  onClose();\n};\n"})}),"\n",(0,o.jsx)(n.h2,{id:"accessibility",children:"Accessibility"}),"\n",(0,o.jsx)(n.p,{children:"Add accessibility features:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'<TouchableOpacity\n  style={styles.menuItem}\n  onPress={() => handleMenuPress(item)}\n  accessibilityRole="button"\n  accessibilityLabel={`Navigate to ${item.title}`}\n  accessibilityHint="Double tap to open this section"\n>\n  <Text style={styles.menuIcon}>{item.icon}</Text>\n  <Text style={styles.menuTitle}>{item.title}</Text>\n</TouchableOpacity>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"performance-tips",children:"Performance Tips"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Memoize menu items"})," if they don't change frequently"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Use FlatList"})," for long menu lists"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Optimize images"})," in user profile section"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Lazy load"})," heavy drawer content"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"./multi-drawer",children:"Multi-Drawer Example"})," - Multiple drawers working together"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"./custom-layouts",children:"Custom Layouts"})," - Advanced layout configurations"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"../guides/advanced-usage",children:"Advanced Usage Guide"})," - Performance and customization tips"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);