"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[934],{887:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api/drawer-provider","title":"DrawerProvider","description":"Root provider component that manages drawer state and gestures.","source":"@site/docs/api/drawer-provider.md","sourceDirName":"api","slug":"/api/drawer-provider","permalink":"/rn-multidrawer/api/drawer-provider","draft":false,"unlisted":false,"editUrl":"https://github.com/fisher/rn-multidrawer/tree/main/docs/docs/api/drawer-provider.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Getting Started","permalink":"/rn-multidrawer/getting-started"},"next":{"title":"Drawer","permalink":"/rn-multidrawer/api/drawer"}}');var d=t(4848),s=t(8453);const i={},o="DrawerProvider",a={},l=[{value:"Usage",id:"usage",level:2},{value:"Props",id:"props",level:2},{value:"Layout Options",id:"layout-options",level:2},{value:"useDrawer Hook",id:"usedrawer-hook",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(r.header,{children:(0,d.jsx)(r.h1,{id:"drawerprovider",children:"DrawerProvider"})}),"\n",(0,d.jsx)(r.p,{children:"Root provider component that manages drawer state and gestures."}),"\n",(0,d.jsx)(r.h2,{id:"usage",children:"Usage"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-tsx",children:"import { DrawerProvider } from 'react-native-multidrawer';\n\nexport default function App() {\n  return (\n    <DrawerProvider>\n      {/* Your app content and drawers */}\n    </DrawerProvider>\n  );\n}\n"})}),"\n",(0,d.jsx)(r.h2,{id:"props",children:"Props"}),"\n",(0,d.jsxs)(r.table,{children:[(0,d.jsx)(r.thead,{children:(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.th,{children:"Prop"}),(0,d.jsx)(r.th,{children:"Type"}),(0,d.jsx)(r.th,{children:"Description"})]})}),(0,d.jsxs)(r.tbody,{children:[(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"children"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"ReactNode"})}),(0,d.jsx)(r.td,{children:"App content and drawers"})]}),(0,d.jsxs)(r.tr,{children:[(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"options"})}),(0,d.jsx)(r.td,{children:(0,d.jsx)(r.code,{children:"{ layout?: DrawerLayout }"})}),(0,d.jsx)(r.td,{children:"Configuration options"})]})]})]}),"\n",(0,d.jsx)(r.h2,{id:"layout-options",children:"Layout Options"}),"\n",(0,d.jsxs)(r.ul,{children:["\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"fullscreen"})," (default) - All drawers cover full screen"]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"sidebar-layout"})," - Left/right full height, top/bottom fit remaining width"]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"header-footer-layout"})," - Top/bottom full width, left/right fit remaining height"]}),"\n",(0,d.jsxs)(r.li,{children:[(0,d.jsx)(r.code,{children:"corner-aware"})," - All drawers respect each other's corners"]}),"\n"]}),"\n",(0,d.jsx)(r.h2,{id:"usedrawer-hook",children:"useDrawer Hook"}),"\n",(0,d.jsx)(r.p,{children:"Access drawer functions:"}),"\n",(0,d.jsx)(r.pre,{children:(0,d.jsx)(r.code,{className:"language-tsx",children:"const { openDrawer, closeDrawer, isDrawerOpen } = useDrawer();\n"})})]})}function h(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,d.jsx)(r,{...e,children:(0,d.jsx)(c,{...e})}):c(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>o});var n=t(6540);const d={},s=n.createContext(d);function i(e){const r=n.useContext(s);return n.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:i(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);