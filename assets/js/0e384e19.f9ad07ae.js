"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[976],{2053:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"intro","title":"React Native MultiDrawer","description":"React Native MultiDrawer is a powerful, customizable multi-directional drawer component library for React Native applications. It provides smooth animations, gesture handling, and support for drawers from all four edges of the screen.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/","permalink":"/rn-multidrawer/","draft":false,"unlisted":false,"editUrl":"https://github.com/fisher/rn-multidrawer/tree/main/docs/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"slug":"/"},"sidebar":"tutorialSidebar","next":{"title":"Installation","permalink":"/rn-multidrawer/installation"}}');var i=n(4848),s=n(8453);const o={sidebar_position:1,slug:"/"},a="React Native MultiDrawer",l={},d=[{value:"Features",id:"features",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Architecture Overview",id:"architecture-overview",level:2},{value:"What&#39;s Next?",id:"whats-next",level:2}];function c(e){const r={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsx)(r.h1,{id:"react-native-multidrawer",children:"React Native MultiDrawer"})}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.strong,{children:"React Native MultiDrawer"})," is a powerful, customizable multi-directional drawer component library for React Native applications. It provides smooth animations, gesture handling, and support for drawers from all four edges of the screen."]}),"\n",(0,i.jsx)(r.h2,{id:"features",children:"Features"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:["\u2728 ",(0,i.jsx)(r.strong,{children:"Multi-directional drawers"})," - Support for top, right, bottom, and left drawers"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83c\udfa8 ",(0,i.jsx)(r.strong,{children:"Smooth animations"})," - Built on React Native Reanimated for 60fps animations"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83d\udc46 ",(0,i.jsx)(r.strong,{children:"Gesture handling"})," - Intuitive swipe gestures powered by React Native Gesture Handler"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83c\udfaf ",(0,i.jsx)(r.strong,{children:"Flexible layouts"})," - 15+ layout configurations for different drawer arrangements"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83d\udd27 ",(0,i.jsx)(r.strong,{children:"Three API levels"})," - Choose from render props, hooks, or context-based APIs"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83d\udcf1 ",(0,i.jsx)(r.strong,{children:"Cross-platform"})," - Works on iOS, Android, and Web"]}),"\n",(0,i.jsxs)(r.li,{children:["\u26a1 ",(0,i.jsx)(r.strong,{children:"Performance optimized"})," - Animations run on UI thread"]}),"\n",(0,i.jsxs)(r.li,{children:["\ud83c\udfaa ",(0,i.jsx)(r.strong,{children:"Collision prevention"})," - Smart gesture detection prevents drawer conflicts"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-jsx",children:"import { DrawerProvider, Drawer } from 'react-native-multidrawer';\n\nexport default function App() {\n  return (\n    <DrawerProvider>\n      <Drawer side=\"left\">\n        {({ progress }) => (\n          <View style={{ flex: 1, backgroundColor: 'blue' }}>\n            <Text>Left Drawer Content</Text>\n          </View>\n        )}\n      </Drawer>\n      \n      {/* Your app content */}\n      <View style={{ flex: 1 }}>\n        <Text>Main App</Text>\n      </View>\n    </DrawerProvider>\n  );\n}\n"})}),"\n",(0,i.jsx)(r.h2,{id:"architecture-overview",children:"Architecture Overview"}),"\n",(0,i.jsx)(r.p,{children:"The library follows a layered architecture:"}),"\n",(0,i.jsxs)(r.ol,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"DrawerProvider"})," - Global context for gesture detection and state management"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"Drawer Components"})," - Render prop components for flexible UI composition"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.strong,{children:"useDrawerState Hook"})," - Low-level hook for custom implementations"]}),"\n"]}),"\n",(0,i.jsx)(r.h2,{id:"whats-next",children:"What's Next?"}),"\n",(0,i.jsxs)(r.ul,{children:["\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"installation",children:(0,i.jsx)(r.strong,{children:"Installation"})})," - Set up the library in your project"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"getting-started",children:(0,i.jsx)(r.strong,{children:"Getting Started"})})," - Build your first drawer"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"api/drawer-provider",children:(0,i.jsx)(r.strong,{children:"API Reference"})})," - Detailed API documentation"]}),"\n",(0,i.jsxs)(r.li,{children:[(0,i.jsx)(r.a,{href:"examples/simple-drawer",children:(0,i.jsx)(r.strong,{children:"Examples"})})," - Real-world implementation examples"]}),"\n"]})]})}function u(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var t=n(6540);const i={},s=t.createContext(i);function o(e){const r=t.useContext(s);return t.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);